{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhgoel/Desktop/ai-poem-generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoodSelector from \"./components/MoodSelector\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport LengthSelector from \"./components/LengthSelector\";\nimport PoemOutput from \"./components/PoemOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mood, setMood] = useState(\"\");\n  const [theme, setTheme] = useState(\"\");\n  const [length, setLength] = useState(\"\");\n  const [poem, setPoem] = useState(\"\");\n  const generatePoem = async () => {\n    const response = await fetch(\"http://127.0.0.1:5000/generate_poem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        mood,\n        theme,\n        length\n      })\n    });\n    const data = await response.json();\n    setPoem(data.poem);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Poem Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoodSelector, {\n      mood: mood,\n      setMood: setMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSelector, {\n      theme: theme,\n      setTheme: setTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LengthSelector, {\n      length: length,\n      setLength: setLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePoem,\n      children: \"Generate Poem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PoemOutput, {\n      poem: poem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Yx6cv1MTFCJzopxWuMTaoAOmCIk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoodSelector","ThemeSelector","LengthSelector","PoemOutput","jsxDEV","_jsxDEV","App","_s","mood","setMood","theme","setTheme","length","setLength","poem","setPoem","generatePoem","response","fetch","method","headers","body","JSON","stringify","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/anirudhgoel/Desktop/ai-poem-generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MoodSelector from \"./components/MoodSelector\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport LengthSelector from \"./components/LengthSelector\";\nimport PoemOutput from \"./components/PoemOutput\";\n\nconst App = () => {\n  const [mood, setMood] = useState(\"\");\n  const [theme, setTheme] = useState(\"\");\n  const [length, setLength] = useState(\"\");\n  const [poem, setPoem] = useState(\"\");\n\n  const generatePoem = async () => {\n    const response = await fetch(\"http://127.0.0.1:5000/generate_poem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ mood, theme, length }),\n    });\n    const data = await response.json();\n    setPoem(data.poem);\n  };\n\n  return (\n    <div>\n      <h1>AI Poem Generator</h1>\n      <MoodSelector mood={mood} setMood={setMood} />\n      <ThemeSelector theme={theme} setTheme={setTheme} />\n      <LengthSelector length={length} setLength={setLength} />\n      <button onClick={generatePoem}>Generate Poem</button>\n      <PoemOutput poem={poem} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,IAAI;QAAEE,KAAK;QAAEE;MAAO,CAAC;IAC9C,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,OAAO,CAACS,IAAI,CAACV,IAAI,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BzB,OAAA,CAACL,YAAY;MAACQ,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CzB,OAAA,CAACJ,aAAa;MAACS,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDzB,OAAA,CAACH,cAAc;MAACU,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDzB,OAAA;MAAQ0B,OAAO,EAAEf,YAAa;MAAAU,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDzB,OAAA,CAACF,UAAU;MAACW,IAAI,EAAEA;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5BID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}